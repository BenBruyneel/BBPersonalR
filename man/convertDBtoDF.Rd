% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbAccess.R
\name{convertDBtoDF}
\alias{convertDBtoDF}
\title{Does the reverse of convertDFtoDB: converts a data.frame of converted
 data back to its original data.frames. Each row from the provided data.frame
 (df) is converted to a separate data.frame}
\usage{
convertDBtoDF(
  df,
  columnNames = colnames(df),
  collapseChar = ";",
  vectorClass = "integer",
  fromBlob = TRUE,
  type = "gzip"
)
}
\arguments{
\item{df}{data.frame to be converted}

\item{columnNames}{character vector specifying which columns from the df
argument are to be put in the converted data.frame(s)}

\item{collapseChar}{the character to be used as seperator}

\item{vectorClass}{class of the seperate elements, default = "integer".
Other tested options are "numeric" and "character". Note: all columns are
the same class when vectorClass is a single element vector. The argument
can be different types, but then all column types need to be specified, eg
c("numeric", "integer")}

\item{fromBlob}{is the data raw datatype or not}

\item{type}{character string, the type of compression. See ?memCompress for
details}
}
\value{
a raw vector
}
\description{
Does the reverse of convertDFtoDB: converts a data.frame of converted
 data back to its original data.frames. Each row from the provided data.frame
 (df) is converted to a separate data.frame
}
