% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbAccess.R
\name{db_ExecuteSQL}
\alias{db_ExecuteSQL}
\title{to execute statements like update a row}
\usage{
db_ExecuteSQL(db, SQLString, doNotChangePool = FALSE, invisibleReturn = TRUE)
}
\arguments{
\item{db}{database access 'handle'}

\item{SQLString}{the SQL query to be performed}

\item{doNotChangePool}{boolean that sets whether the pool has to be locked/
released inside this function. Usually this needs to be done, so default
is FALSE. Set to TRUE if this locking/release is done outside of the
function. Note that there is a sort of bug when working with the
pool::dbWriteTable : when a sql constraint like UNIQUE is defined for the
table used, this may result in a locked database upon error. It's advisable
to set doNotChangePool to TRUE to prevent this from happening}

\item{invisibleReturn}{if TRUE (default), then nothing is returned, if FALSE
then the result of the SQLString will be returned (see SQL for what it can
be)}
}
\value{
result from the SQL query, usually a data.frame
}
\description{
to execute statements like update a row
}
