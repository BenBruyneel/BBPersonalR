% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/regressionTools.R
\name{recoveryPlot}
\alias{recoveryPlot}
\title{generates a ggplot object of the recovery plot of a calibration table}
\usage{
recoveryPlot(
  fitTable,
  predictorColumn = 1,
  responseColumn = 2,
  weights = NULL,
  fit = fitLM(fitTable, predictorColumn = predictorColumn, responseColumn =
    responseColumn, weights = weights),
  title = "",
  figureNo = 3,
  caption = paste(c("Figure ", figureNo, ": Recovery Plot"), collapse = ""),
  showLimits = TRUE,
  limits = stdRecoveryLimits(),
  fitColor = "red",
  fitLineType = 1,
  fitWidth = 1,
  fitAlpha = 1,
  pointsColor = "Black",
  pointsFill = "black",
  pointsShape = 21,
  pointsSize = 2,
  pointsAlpha = 1,
  autoScaleX = TRUE,
  xLimits = c("N/A", "N/A"),
  xLabel = NULL,
  xOob = 2,
  autoScaleY = TRUE,
  yLimits = c("N/A", "N/A"),
  yLabel = NULL,
  yOob = 2,
  usePredictor = TRUE,
  useYLabel = TRUE,
  rotateGraph = FALSE,
  xOptions = "1",
  yOptions = "1"
)
}
\arguments{
\item{fitTable}{data.frame containing the data to be fitted}

\item{predictorColumn}{can be integer (column number) or character
(column name)}

\item{responseColumn}{can be integer (column number) or character
(column name)}

\item{weights}{default = NULL, otherwise must be integer to give weights to
the predictor values (see also function weightsVector) or a numeric
vector with length = number of rows in calibrationTable. Note: if a vector
of weights if provided, the prediction to the minimal/maximal values on the
x- & y-axis is not possible}

\item{fit}{model object (eg coming from lm() or fitLM())}

\item{title}{title for the graph, character vector}

\item{figureNo}{number of the figure, used for the caption ("Figure ..." )}

\item{caption}{caption for the graph, character vector}

\item{showLimits}{if TRUE, draw the lines for the limits defined in limits}

\item{limits}{definition of the limits to draw, see stdRecoveryLimits for an
example}

\item{fitColor}{defines color of loess-type 'fit' to the recovery coordinates}

\item{fitLineType}{defines line type of the 'fit' to the recovery coordinates}

\item{fitWidth}{defines line width of the 'fit' to the recovery coordinates}

\item{fitAlpha}{defines alpha of the 'fit' to the residual coordinates}

\item{pointsColor}{(border) color of the data points}

\item{pointsFill}{fill color, note: only some shapes have a fill color}

\item{pointsShape}{shape of the data points (default = 21), see vignette
ggplot2::ggplot2-specs}

\item{pointsSize}{size of the data points}

\item{pointsAlpha}{alpha ('seethrough' value) of the data points}

\item{autoScaleX}{if TRUE then default autoscaling of the x-axis takes place,
most other settings delaing with scaling of the x-axis the are then ignored}

\item{xLimits}{2 element numeric vector with the minimum and maximum value
for the x-axis. If an element is a character vector or something that
cannot be converted to a numeric value, then NA is used which leads to
minimum/maximum value}

\item{xLabel}{name of the x-axis, character vector}

\item{xOob}{integer vector, indicating how to deal with out of bounds
datapoints. 1 = censor scales::oob_censor is used, 2 = infinite,
scales::oob_squish_infinite is used. Note: x-axis only}

\item{autoScaleY}{if TRUE then default autoscaling of the y-axis takes place,
most other settings delaing with scaling of the y-axis the are then ignored}

\item{yLimits}{2 element numeric vectorN with the minimum and maximum value
for the y-axis. If an element is a character vector or something that
cannot be converted to a numeric value, then NA is used which leads to
minimum/maximum value}

\item{yLabel}{name of the y-axis, character vector}

\item{yOob}{integer vector, indicating how to deal with out of bounds
datapoints. 1 = censor scales::oob_censor is used, 2 = infinite,
scales::oob_squish_infinite is used. Note: y-axis only}

\item{usePredictor}{if TRUE then the predictor is used as x-axis}

\item{useYLabel}{if TRUE then the y-label is used}

\item{rotateGraph}{if TRUE, then x-axis and y-axis are swapped, essentially
resulting in a graph rotated 90 degrees}

\item{xOptions}{x-axis options character vector, "1" normal scale,
"2" reversed scale, "3" logarithmic scale (log10)}

\item{yOptions}{y-axis options character vector, "1" normal scale,
"2" reversed scale,"3" logarithmic scale (log10)}
}
\value{
ggplot object
}
\description{
generates a ggplot object of the recovery plot of a calibration table
}
