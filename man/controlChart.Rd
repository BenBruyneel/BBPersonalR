% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generalStat.R
\name{controlChart}
\alias{controlChart}
\title{creates a ggplot object showing a control chart with optional control lines}
\usage{
controlChart(
  data,
  yColumn,
  xColumn = NA,
  removeNA = TRUE,
  drawPoints = TRUE,
  pointColor = "black",
  pointFill = "orange",
  pointShape = 21,
  pointSize = 3,
  pointAlpha = 0.75,
  drawLine = TRUE,
  lineColor = "black",
  lineType = "solid",
  lineWidth = 1,
  lineAlpha = 1,
  controlLines = controlChartMarkerLines(yValues = NA),
  xLabel = "#",
  yLabel = NA,
  title = paste("Control Chart ", ifelse(identical(yLabel, NA), "", paste("of ",
    yLabel, sep = "")), sep = ""),
  xAxis = TRUE,
  yAxis = TRUE,
  vertical = FALSE,
  xDefault = FALSE,
  xLimits = c(NA, NA),
  yDefault = TRUE,
  yLimits = c(NA, NA),
  ...
)
}
\arguments{
\item{data}{the data to be plotted, can be a numeric/character/etc vector or
data.frame like (or tibble etc). If it is data.frame or similar the column
argument defines which column is to be used}

\item{yColumn}{defines which column is to be used for y-axis ib the plot.
Can be integer or character (column name)}

\item{xColumn}{defines which column is to be used for the x-axis, can be
integer or character (column name). If the column consists of date/time
values, then set the parameter xDefault to TRUE. Note: this parameter is
optional, default is NA}

\item{removeNA}{if TRUE, the NA 'values' in the vector will be removed prior
to plotting. @note this will remove warning messages and errors}

\item{drawPoints}{boolean, if TRUE then the data points themselves will be
drawn}

\item{pointColor}{defines the color of the border of the data points}

\item{pointFill}{defines the color of the data points themselves}

\item{pointShape}{shape of the data points}

\item{pointSize}{size of the data points}

\item{pointAlpha}{alpha ('see through' value) of the data points}

\item{drawLine}{boolean, if TRUE then a line through the data points will be
drawn}

\item{lineColor}{color of the line}

\item{lineType}{type of the line}

\item{lineAlpha}{alpha ('see through' value) of the line}

\item{controlLines}{either NA (no horizontal lines) or a data.frame with
columns yValues, type, color, width, alpha. yValues defines at which
'height' (y-axis) the control lines are to be drawn. Use the function
 controlChartMarkerLines for this if needed}

\item{xLabel}{defines x-axis label}

\item{yLabel}{defines y-axis label (if not defined (NA), then the yColumn
name will be used, if possible)}

\item{title}{sets title of graph}

\item{xAxis}{defines if the x-axis is shown}

\item{yAxis}{defines if the x-axis is shown}

\item{vertical}{if TRUE, flips x- and y-axis}

\item{xDefault}{default is set to TRUE, together with xLimits, this can be
used to define the exact range of the X-axis}

\item{xLimits}{default = c(0,NA), together with xDefault, this can be
used to define the exact range of the Y-axis}

\item{yDefault}{default is set to TRUE, together with yLimits, this can be
used to define the exact range of the Y-axis}

\item{yLimits}{default = c(0,NA), together with yDefault, this can be
used to define the exact range of the Y-axis}

\item{...}{can be used to pass on other arguments to graphAdjust()
(like xLimits, xExpand, etc)}

\item{lineWidh}{width of the nline}
}
\value{
a ggplot object
}
\description{
creates a ggplot object showing a control chart with optional control lines
}
