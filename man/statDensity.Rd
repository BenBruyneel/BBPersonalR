% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generalStat.R
\name{statDensity}
\alias{statDensity}
\title{creates a ggplot object showing a densityplot}
\usage{
statDensity(
  data,
  column = 1,
  outlineColor = "black",
  fillColor = "red",
  alpha = 1,
  variableName = "variable",
  vertical = FALSE,
  xLabel = ifelse(!is.Class(data, "data.frame"), NA, ifelse(is.character(column),
    paste(column, collapse = ""), paste(colnames(data)[column], collapse = ", "))),
  yLabel = "Probability Density",
  title = NA,
  titleDefault = paste(c("Distribution of ", ifelse(!is.character(column), "", column)),
    collapse = ""),
  removeNA = TRUE,
  xAxis = TRUE,
  yAxis = TRUE,
  xDefault = TRUE,
  xLimits = c(0, NA),
  xSymmetric = FALSE,
  xSymmetricExpand = 0.05,
  xCentered = FALSE,
  xMedian = FALSE,
  xDeviations = 4,
  gridLines = TRUE,
  gridLinesX = TRUE,
  gridLinesY = TRUE,
  showLegend = TRUE,
  legend.position = "bottom",
  ...
)
}
\arguments{
\item{data}{the data tp be plotted, can be a numeric/character/etc vector or
data.frame like (or tibble etc). If it is data.frame or similar the column
defines which column(s) is/are to be used}

\item{column}{defines which column(s) is/are to be used for the densityplot.
Can be integer or character (column name(s))}

\item{outlineColor}{defines the color of the line around the densityplot}

\item{fillColor}{defines the color of the densityplots themselves.
If a multi-column data.frame is plotted, the same number as the number of
columns used should be used. If not the same number, then the graph
will revert to default colors of ggplot}

\item{alpha}{defines the see-through factor value of tje density plot}

\item{variableName}{sets the 'combined' name of the columns (IF there is more
than one!)}

\item{vertical}{if TRUE, flips x- and y-axis}

\item{xLabel}{sets x-axis title}

\item{yLabel}{set y-axos title}

\item{title}{sets title of graph, if NA then the titleDefault will be used}

\item{titleDefault}{will be combined with the xLabel to be used as title if
title == NA}

\item{removeNA}{if TRUE, the NA 'values' in the vector will be removed prior
to plotting. @note this has consquence that ROWS will be removed when using
multiple columns with data.frame's}

\item{xAxis}{defines if the x-axis is shown}

\item{yAxis}{defines if the x-axis is shown}

\item{xDefault}{default is set to TRUE, together with xLimits, this can be
used to define the exact range of the X-axis}

\item{xLimits}{default = c(0,NA), together with xDefault, this can be
used to define the exact range of the Y-axis}

\item{xSymmetric}{if TRUE then the range of x-axis will be adjusted to be
equal on both the left and the right side of the center (transformed x = 0)}

\item{xSymmetricExpand}{allows for padding around data (x-axis), 0.05 means
5 percent (pre-transformation) extra wide x-axis range}

\item{xCentered}{if TRUE, the plot will be 'cemtered' around the either the
mean or median x-value}

\item{xMedian}{if TRUE then median and mean absolute deviation (mad) are
used for centering the plot along the x-axis; if FALSE then the mean and tge
standard deviation are used}

\item{xDeviations}{defines how many deviations the range of the x-axis may
differ from the mean or median. Range will be either (median-xDeviations*mad
,median+xDeviations**mad) or (mean - xDeviations*sd,mean + xDeviations*sd)}

\item{gridLines}{if TRUE then gridlines are shown}

\item{gridLinesX}{if TRUE then vertical gridlines are shown (set gridLines to
FALSE when using this)}

\item{gridLinesY}{if TRUE then horizontal gridlines are shown (set gridLines
to FALSE when using this)}

\item{showLegend}{defines if the legend is to be shown or not}

\item{legend.position}{defines where a legend is to be placed}

\item{...}{can be used to pass on other arguments to graphAdjust()
(like xLimits, xExpand, etc)}
}
\value{
a ggplot object
}
\description{
creates a ggplot object showing a densityplot
}
